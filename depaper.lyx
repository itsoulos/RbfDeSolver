#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
RbfDeSolver: a software tool to approximate differential equations using
 Radial Basis Functions
\end_layout

\begin_layout Author
Ioannis G.
 Tsoulos, Alexandros Tzallas, Evangelos Karvounis
\end_layout

\begin_layout Date
\begin_inset Formula $ $
\end_inset

Department of Informatics and Telecommunications, University of Ioannina,
 47100 Arta, Greece
\end_layout

\begin_layout Abstract
A new method for solving differential equations is presented in this work.
 The solution of the differential equations is done by adapting an artificial
 neural network RBF to the function under study.
 The adaptation of the parameters of the network is done with a hybrid genetic
 algorithm.
 In addition, this text presents in detail the software developed for the
 above method in ANSI C ++.
 The user can code the underlying differential equation either in C++ or
 in Fortran format.
 The method was applied to a wide range of test functions of different types
 and the results are presented and analyzed in detail.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
A variety of problems in areas such as physics 
\begin_inset CommandInset citation
LatexCommand cite
key "de_physics1,de_physics2"
literal "false"

\end_inset

, chemistry 
\begin_inset CommandInset citation
LatexCommand cite
key "de_chem1,de_chem2,de_chem3"
literal "false"

\end_inset

, economics 
\begin_inset CommandInset citation
LatexCommand cite
key "de_econ1,de_econ2"
literal "false"

\end_inset

, biology 
\begin_inset CommandInset citation
LatexCommand cite
key "de_bio1,de_bio2"
literal "false"

\end_inset

 etc can be modeled using ordinary differential equations (ODEs), systems
 of differential equations (SODEs) and partial differential equations (PDEs).
 Due to the importance of differential equations, several methods have appeared
 in the relevant literature, such as Runge Kutta methods 
\begin_inset CommandInset citation
LatexCommand cite
key "de_rk1,de_rk2,de_rk3"
literal "false"

\end_inset

, Predictor - Corrector methods 
\begin_inset CommandInset citation
LatexCommand cite
key "de_pc1,de_pc2"
literal "false"

\end_inset

.
 Also, many methods based on machine learning models have appeared, such
 as methods that utilize neural networks 
\begin_inset CommandInset citation
LatexCommand cite
key "de_nn1,de_nn2,de_nn3"
literal "false"

\end_inset

, methods based on differential evolution techniques 
\begin_inset CommandInset citation
LatexCommand cite
key "de_de1,de_de2"
literal "false"

\end_inset

, genetic algorithms 
\begin_inset CommandInset citation
LatexCommand cite
key "nn_ge1,nn_ge2"
literal "false"

\end_inset

 etc.
 Also, in recent years a variety of methods that take advantage of modern
 GPU architectures have been published for the solution of differential
 equations 
\begin_inset CommandInset citation
LatexCommand cite
key "de_gpu1,de_gpu2,de_gpu3"
literal "false"

\end_inset

.
 Also, a method based on Grammatical Evolution 
\begin_inset CommandInset citation
LatexCommand cite
key "ge_main"
literal "false"

\end_inset

 has been introduced to solve differential equations in analytical form
 by Tsoulos and Lagaris 
\begin_inset CommandInset citation
LatexCommand cite
key "de_tsoulos"
literal "true"

\end_inset

, that creates solutions of differential equations in closed analytical
 form.
 The current work proposed the incorporation of a modified genetic algorithm
 
\begin_inset CommandInset citation
LatexCommand cite
key "ga1,ga2,ga3"
literal "false"

\end_inset

 and an Radial Basis Function network (RBF) 
\begin_inset CommandInset citation
LatexCommand cite
key "rbf1"
literal "false"

\end_inset

 to tackle the problem of solving differential equations.
 RBFs are usually expressed as:
\series bold

\begin_inset Formula 
\begin{equation}
r(x)=\sum_{i=1}^{k}w_{i}\phi\left(\left\Vert x-c_{i}\right\Vert \right)\label{eq:firstrbf}
\end{equation}

\end_inset


\series default
where the vector 
\series bold

\begin_inset Formula $\overrightarrow{x}$
\end_inset

 
\series default
is considered the input vector and the vector
\series bold
 
\begin_inset Formula $\overrightarrow{w}$
\end_inset

 
\series default
is denoted as the weight vector.
 In many cases the function 
\begin_inset Formula $\phi(x)$
\end_inset

 is a Gaussian function such as:
\end_layout

\begin_layout Standard

\series bold
\begin_inset Formula 
\begin{equation}
\phi(x)=\exp\left(-\frac{\left(x-c\right)^{2}}{\sigma^{2}}\right)
\end{equation}

\end_inset


\series default
where the value 
\begin_inset Formula $\phi(x)$
\end_inset

 depends on the distance between the vectors
\series bold
 
\begin_inset Formula $\overrightarrow{x},\ $
\end_inset


\begin_inset Formula $\overrightarrow{c}$
\end_inset


\series default
.
 
\end_layout

\begin_layout Standard
RBF networks have been used in many practical problems in various areas
 such as physics 
\begin_inset CommandInset citation
LatexCommand cite
key "rbfphysics1,rbfphysics2,rbfphysics3,rbfphysics4"
literal "false"

\end_inset

, chemistry 
\begin_inset CommandInset citation
LatexCommand cite
key "rbfchemistry1,rbfchemistry2,rbfchemistry3"
literal "false"

\end_inset

, medicine 
\begin_inset CommandInset citation
LatexCommand cite
key "rbfmed1,rbfmed2,rbfmed3"
literal "false"

\end_inset

, economics 
\begin_inset CommandInset citation
LatexCommand cite
key "rbfecon1,rbfecon2,rbfecon3"
literal "false"

\end_inset

 etc.
 In current work, the RBF network is used as an estimator of the differential
 equations for the cases of ordinary differential equations (ODEs), systems
 of ordinary differential equations (SODEs) and partial differential equations
 (PDEs).
 The enforcement of the initial and boundary conditions is performed through
 penalization.
 The parameters of the network are adapted through a hybrid genetic algorithm.
 Also, the used software tool is illustrated in detail and some examples
 of usage are presented.
 The tool is designed for UNIX systems equipped with the GNU C++ and Fortran
 77 (g77) compilers.
 Furthermore, for the parellization the incorporation of the OpenMP 
\begin_inset CommandInset citation
LatexCommand cite
key "openmp"
literal "false"

\end_inset

 programming library is needed.
 Also, the software utilizes the qmake installation utility of the QT software
 library, freely available from 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://qt.io
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
The rest of this article is organized as follows: in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Detailed-description"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the proposed method is fully described, in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Software-details"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the software details are presented, in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Experimental-results"
plural "false"
caps "false"
noprefix "false"

\end_inset

 the experimental results for some differential equations are presented
 and finally in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Conclusions"
plural "false"
caps "false"
noprefix "false"

\end_inset

 some conclusions and guidelines for future improvements of the method and
 the accompanied software are given.
\end_layout

\begin_layout Section
Detailed description 
\begin_inset CommandInset label
LatexCommand label
name "sec:Detailed-description"

\end_inset


\end_layout

\begin_layout Standard
In the proposed method, an artificial RBF network with 
\begin_inset Formula $n$
\end_inset

 weights is used as a function estimator that solves a differential equation.
 The initial and boundary conditions are imposed by the use of punitive
 factors.
 The network parameters are estimated using a hybrid genetic algorithm.

\series bold
 
\series default
The genetic algorithms are biologically inspired programming tools
\series bold
 
\series default
that maintain and evolve a pool of candidate solutions to an optimization
 problem.
 The members of this pool are usually called chromosomes or genetic population.
 The evolution of the population is done through the operations of mutation
 and crossover.
 Among other advantages, genetic algorithms are distinguished for their
 simplicity in implementation, for the ease of their parallelization, their
 tolerance for errors, etc.
 The size of each chromosome in the used genetic algorithm is calculated
 as: 
\begin_inset Formula $d\times n+n+n$
\end_inset

, where the value 
\begin_inset Formula $d$
\end_inset

 is 1 for ODEs and system of ODEs and 2 for PDEs.
 The first 
\begin_inset Formula $d\times n$
\end_inset

 values are used for the centroid vectors 
\begin_inset Formula $c_{i}$
\end_inset

 of the equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:firstrbf"
plural "false"
caps "false"
noprefix "false"

\end_inset

, the next 
\begin_inset Formula $n$
\end_inset

 values are used for the 
\begin_inset Formula $\sigma$
\end_inset

 values of every Gaussian unit and the remaining 
\begin_inset Formula $n$
\end_inset

 values of the chromosome are used for the weights 
\begin_inset Formula $w_{i}$
\end_inset

 of the equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:firstrbf"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 In addition, in the proposed implementation, a local optimization method
 is periodically applied to some randomly selected chromosomes of the population.
 This approach is performed in order to improve the accuracy of the solution
 produced by the genetic algorithm, but also to speed up the solution of
 the differential equation.
 The used local search procedure for this work was a BFGS variant of Powell
 
\begin_inset CommandInset citation
LatexCommand cite
key "tolmin"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
In the following subsections, the proposed method is outlined in detail
 as well as the fitness calculation for every case of differential equation.
\end_layout

\begin_layout Subsection
Main algorithm 
\end_layout

\begin_layout Standard
The steps of main the algorithm are described below:
\end_layout

\begin_layout Enumerate

\series bold
Initialization step
\series default

\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
Set
\series default
 iter=0, as the current number of generations.
\end_layout

\begin_layout Enumerate

\series bold
Set
\series default
 
\begin_inset Formula $N_{c}$
\end_inset

, as the total number of chromosomes.
\end_layout

\begin_layout Enumerate

\series bold
Set
\series default
 
\begin_inset Formula $n$
\end_inset

, the number of weights in the RBF network.
\end_layout

\begin_layout Enumerate

\series bold
Initialize
\series default
 randomly the chromosomes 
\begin_inset Formula $X_{i},i=1\ldots N_{c}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate

\series bold
Set
\series default
 ITERMAX as the maximum number of generations.
\end_layout

\begin_layout Enumerate

\series bold
Set
\series default
 
\begin_inset Formula $p_{s}$
\end_inset

 as the selection rate and 
\begin_inset Formula $p_{m}$
\end_inset

 the mutation rate.
 
\end_layout

\begin_layout Enumerate

\series bold
Set
\series default
 
\begin_inset Formula $f_{l}=\infty$
\end_inset

, the best fitness in the population.
\end_layout

\begin_layout Enumerate

\series bold
Set 
\begin_inset Formula $L_{I}$
\end_inset


\series default
, the number of generations to run before applying the local optimization
 method
\end_layout

\begin_layout Enumerate

\series bold
Set 
\begin_inset Formula $L_{c},$
\end_inset


\series default
 the number of chromosomes that will involved in the local search procedure.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Termination check.

\series default
 
\series bold
If
\series default
 
\begin_inset Formula $iter>$
\end_inset

ITERMAX 
\series bold
OR
\series default
 
\begin_inset Formula $f_{l}\le\epsilon$
\end_inset

 terminate.
\begin_inset CommandInset label
LatexCommand label
name "enu:Termination-check.-If"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Calculate
\series default
 the fitness 
\begin_inset Formula $f_{i}$
\end_inset

 for every chromosome 
\begin_inset Formula $x_{i}$
\end_inset

.
 The calculation procedure is described in subsection 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Fitness-evaluation"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 
\begin_inset CommandInset label
LatexCommand label
name "enu:Calculate-the-corresponding"

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Genetic Operators
\series default

\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
Selection 
\series default
procedure: During selection, the chromosomes are classified according to
 their suitability.
 The best
\series bold
 
\begin_inset Formula $\left(1-p_{s}\right)\times N_{c}$
\end_inset


\series default
 chromosomes are transferred without changes to the next generation of the
 population.
 The rest will be replaced by chromosomes that will be produced at the crossover.
\end_layout

\begin_layout Enumerate

\series bold
Crossover 
\series default
procedure:
\series bold
 
\series default
During this process, 
\begin_inset Formula $p_{s}\times N_{c}$
\end_inset

 chromosomes will be created.
 Firstly, for every pair of produced offsprings, two distinct chromosomes
 (parents) are selected from the current population using tournament selection:
 First a subset of 
\begin_inset Formula $K>1$
\end_inset

 randomly selected chromosomes is created and the chromosome with the best
 fitness value is selected as parent.

\series bold
 
\series default
For every pair 
\begin_inset Formula $(z,w)$
\end_inset

 of parents, two new offsprings 
\begin_inset Formula $\tilde{z}$
\end_inset

 and 
\begin_inset Formula $\tilde{w}$
\end_inset

 are created through the following:
\series bold

\begin_inset Formula 
\begin{eqnarray}
\tilde{z_{i}} & = & a_{i}z_{i}+\left(1-a_{i}\right)w_{i}\nonumber \\
\tilde{w_{i}} & = & a_{i}w_{i}+\left(1-a_{i}\right)z_{i}\label{eq:crossover_ali-1}
\end{eqnarray}

\end_inset


\series default
where 
\begin_inset Formula $a_{i}$
\end_inset

 is a random number with the property 
\begin_inset Formula $a_{i}\in[-0.5,1.5]$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "kaeloali"
literal "true"

\end_inset

.
 
\end_layout

\begin_layout Enumerate

\series bold
Mutation 
\series default
procedure: For every element of each chromosome select a random number 
\begin_inset Formula $r\in\left[0,1\right]$
\end_inset

 and alter the corresponding chromosome if 
\begin_inset Formula $r\le p_{m}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Set
\series default
 iter=iter+1
\end_layout

\begin_layout Enumerate

\series bold
Local Search Step 
\series default

\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
If 
\series default

\begin_inset Formula $\mbox{iters}\ \mod\ L_{I}=0$
\end_inset

 
\series bold
Then
\series default

\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
Select
\series default
 a subset of 
\begin_inset Formula $L_{C}$
\end_inset

 randomly chosen chromosomes from the genetic population.
 Denote this subset with 
\begin_inset Formula $L_{S}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\series bold
For
\series default
 every chromosome 
\begin_inset Formula $X_{i}$
\end_inset

 
\series bold
in
\series default
 
\begin_inset Formula $L_{S}$
\end_inset

 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
Start
\series default
 a local search procedure 
\begin_inset Formula $y=L\left(x_{i}\right)$
\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Set
\series default
 
\begin_inset Formula $f_{i}=y$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate

\series bold
Endif
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Denote 
\series default
with 
\begin_inset Formula $f_{l}$
\end_inset

 the best fitness value for the corresponding chromosome 
\series bold

\begin_inset Formula $x_{l}$
\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Goto
\series default
 step 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Termination-check.-If"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Fitness evaluation
\begin_inset CommandInset label
LatexCommand label
name "subsec:Fitness-evaluation"

\end_inset


\end_layout

\begin_layout Standard
The evaluation of the fitness is different for every case of differential
 equations, although in every case penalization is used to enforce the initial
 or the boundary conditions of every case.
\end_layout

\begin_layout Subsection
Ode case 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Ode-case"

\end_inset


\end_layout

\begin_layout Standard
Consider an ODE in the following format: 
\begin_inset Formula 
\begin{equation}
\psi\left(x,y,y^{(1)},\ldots,y^{(n)}\right)=0,\ x\in[a,b]
\end{equation}

\end_inset

with 
\begin_inset Formula $y^{(i)}$
\end_inset

 the ith-order derivative of 
\begin_inset Formula $y(x).$
\end_inset

 The initial conditions are expressed as: 
\begin_inset Formula 
\begin{equation}
h_{i}\left(x,y,y^{(1)},\ldots,y^{(n)}\right)_{|x=t_{i}},i=1,\ldots,n
\end{equation}

\end_inset

where 
\begin_inset Formula $t_{i}$
\end_inset

 could be 
\begin_inset Formula $a$
\end_inset

 or 
\begin_inset Formula $b$
\end_inset

.
 The steps for the calculation of the fitness 
\begin_inset Formula $f(g)$
\end_inset

 of a chromosome 
\begin_inset Formula $g$
\end_inset

 are the following for the ODE case:
\end_layout

\begin_layout Enumerate

\series bold
Create
\series default
 
\begin_inset Formula $T=\left\{ x_{1}=a,x_{2},x_{3},\ldots,x_{N}=b\right\} $
\end_inset

 a set of equidistant points.
\end_layout

\begin_layout Enumerate

\series bold
Create
\series default
 the RBF 
\begin_inset Formula $r=r(g)$
\end_inset

 network for the the chromosome 
\begin_inset Formula $g$
\end_inset

.
\end_layout

\begin_layout Enumerate

\series bold
Calculate
\series default
 the value 
\begin_inset Formula $E_{r}=\sum_{i=1}^{N}\psi\left(x_{i},r\left(x_{i}\right),r^{(1)}\left(x_{i}\right),\ldots,r^{(n)}\left(x_{i}\right)\right)^{2}$
\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Calculate
\series default
 the penalty value for the initial conditions: 
\begin_inset Formula $P_{r}=\lambda\sum_{k=1}^{n}h_{k}^{2}\left(x,r(x),r^{(1)}(x),\ldots,r^{(n)}(x)\right)_{|x=t_{k}}$
\end_inset

, where 
\begin_inset Formula $\lambda>0$
\end_inset

.
\end_layout

\begin_layout Enumerate

\series bold
Return
\series default
 
\begin_inset Formula $f(g)=E_{r}+P_{r}$
\end_inset


\end_layout

\begin_layout Subsection
Sode case 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Sode-case"

\end_inset


\end_layout

\begin_layout Standard
The system of odes that should be solved is in the form:
\begin_inset Formula 
\begin{equation}
\left(\begin{array}{ccc}
\psi_{1}\left(x,y_{1},y_{1}^{(1)},y_{2},y_{2}^{(1)},\ldots,y_{k},y_{k}^{(1)}\right) & = & 0\\
\psi_{2}\left(x,y_{1},y_{1}^{(1)},y_{2},y_{2}^{(1)},\ldots,y_{k},y_{k}^{(1)}\right) & = & 0\\
\vdots & \vdots & \vdots\\
\psi_{k}\left(x,y_{1},y_{1}^{(1)},y_{2},y_{2}^{(1)},\ldots,y_{k},y_{k}^{(1)}\right) & = & 0
\end{array}\right)
\end{equation}

\end_inset

with 
\begin_inset Formula $x\in[a,b]$
\end_inset

 and the initial conditions are expressed as: 
\begin_inset Formula 
\begin{equation}
\left(\begin{array}{ccc}
y_{1}(a) & = & y_{1a}\\
y_{2}(a) & = & y_{2a}\\
\vdots & \vdots & \vdots\\
y_{k}(a) & = & y_{ka}
\end{array}\right)\label{eq:eqinit}
\end{equation}

\end_inset

The fitness calculation 
\begin_inset Formula $f(g)$
\end_inset

 for a given chromosome 
\begin_inset Formula $g$
\end_inset

 has as follows:
\end_layout

\begin_layout Enumerate

\series bold
Create
\series default
 
\begin_inset Formula $T=\left\{ x_{1}=a,x_{2},x_{3},\ldots,x_{N}=b\right\} $
\end_inset

 a set of equidistant points.
\end_layout

\begin_layout Enumerate

\series bold
Split
\series default
 the chromosome 
\begin_inset Formula $g$
\end_inset

 into 
\begin_inset Formula $k$
\end_inset

 parts and create the corresponding RBF networks 
\begin_inset Formula $r_{i}=r\left(g_{i}\right)$
\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Calculate
\series default
 the errors: 
\begin_inset Formula $E_{r_{i}}=\sum_{j=1}^{N}\left(\psi_{i}\left(x_{j},r_{1},r_{1}^{(1)},r_{2},r_{2}^{(1)},\ldots,r_{k},r_{k}^{(1)}\right)\right)^{2}$
\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Calculate
\series default
 the penalty values: 
\begin_inset Formula $P_{r_{i}}=\lambda\left(r_{i}\left(a\right)-y_{ia}\right)^{2}$
\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Calculate
\series default
 the total fitness value: 
\begin_inset Formula $f(g)=\sum_{i=1}^{k}\left(E_{r_{i}}+P_{r_{i}}\right)$
\end_inset


\end_layout

\begin_layout Subsection
Pde case
\end_layout

\begin_layout Standard
Consider a Pde in the following form:
\begin_inset Formula 
\begin{equation}
h\left(x,y,\Psi(x,y),\frac{\partial}{\partial x}\Psi(x,y),\frac{\partial}{\partial y}\Psi(x,y),\frac{\partial^{2}}{\partial x^{2}}\Psi(x,y),\frac{\partial^{2}}{\partial y^{2}}\Psi(x,y)\right)=0
\end{equation}

\end_inset

with 
\begin_inset Formula $x\in[a,b],\ y\in[c,d]$
\end_inset

.
 For Dirichlet boundary conditions we have the following condition functions:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\Psi(a,y)=f_{0}(y)$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\Psi(b,y)=f_{1}(y)$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\Psi(x,c)=g_{0}(x)$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\Psi(x,d)=g_{1}(x)$
\end_inset


\end_layout

\begin_layout Standard
The steps to calculate the fitness 
\begin_inset Formula $f(g)$
\end_inset

 for any given chromosome are the following:
\end_layout

\begin_layout Enumerate

\series bold
Construct
\series default
 the set 
\begin_inset Formula $T=\left\{ \left(x_{1},y_{1}\right),\left(x_{2},y_{2}\right),\ldots,\left(x_{N},y_{N}\right)\right\} $
\end_inset

 uniformly sampled points in 
\begin_inset Formula $[a,b]\times[c,d]$
\end_inset

.
\end_layout

\begin_layout Enumerate

\series bold
Construct
\series default
 the set 
\begin_inset Formula $x_{B}=\left\{ x_{b1},x_{b2},\ldots,x_{bM}\right\} $
\end_inset

 equidistant points in 
\begin_inset Formula $[a,b]$
\end_inset

.
\end_layout

\begin_layout Enumerate

\series bold
Construct
\series default
 the set 
\begin_inset Formula $y_{B}=\left\{ y_{b1},y_{b2},\ldots,y_{bM}\right\} $
\end_inset

equidistant points in 
\begin_inset Formula $[c,d]$
\end_inset

.
\end_layout

\begin_layout Enumerate

\series bold
Set
\series default
 
\begin_inset Formula $r=r(g)$
\end_inset

 the RBF network for the chromosome 
\begin_inset Formula $g$
\end_inset

.
\end_layout

\begin_layout Enumerate

\series bold
Calculate
\series default
 the quantity 
\begin_inset Formula $E_{r}$
\end_inset

 as 
\begin_inset Formula 
\[
E_{r}=\sum_{i=1}^{N}h\left(x_{i},y_{i},r\left(x_{i},y_{i}\right),\frac{\partial}{\partial x}r\left(x_{i},y_{i}\right),\frac{\partial}{\partial y}r\left(x_{i},y_{i}\right)\right)^{2}
\]

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Calculate
\series default
 the following penalty values:
\begin_inset Formula 
\[
\begin{array}{ccc}
P_{1r} & = & \lambda\sum_{i=1}^{M}\left(r\left(a,y_{bi}\right)-f_{0}\left(y_{bi}\right)\right)^{2}\\
P_{2r} & = & \lambda\sum_{i=1}^{M}\left(r\left(b,y_{bi}\right)-f_{1}\left(y_{bi}\right)\right)^{2}\\
P_{3r} & = & \lambda\sum_{i=1}^{M}\left(r\left(x_{bi},c\right)-g_{0}\left(x_{bi}\right)\right)^{2}\\
P_{4r} & = & \lambda\sum_{i=1}^{M}\left(r\left(x_{bi},d\right)-g_{1}\left(x_{bi}\right)\right)^{2}
\end{array}
\]

\end_inset


\end_layout

\begin_layout Enumerate

\series bold
Calculate
\series default
 the total fitness as 
\begin_inset Formula $f(g)=E_{r}+P_{1r}+P_{2r}+P_{3r}+P_{4r}$
\end_inset


\end_layout

\begin_layout Section
Software details
\begin_inset CommandInset label
LatexCommand label
name "sec:Software-details"

\end_inset


\end_layout

\begin_layout Subsection
Installation
\end_layout

\begin_layout Standard
The package is distributed in a zip file from the relevant Github URL 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/itsoulos/RbfDeSolver
\end_layout

\end_inset

 named RbfDeSolver-master.zip and under UNIX systems the user must execute
 the following commands to compile the software:
\end_layout

\begin_layout Enumerate
unzip RbfDeSolver-master.zip
\end_layout

\begin_layout Enumerate
cd RbfDeSolver
\end_layout

\begin_layout Enumerate
qmake .
\end_layout

\begin_layout Enumerate
make clean
\end_layout

\begin_layout Enumerate
make
\end_layout

\begin_layout Standard
The final outcome of the compilation is the software 
\emph on
RbfDeSolver.
 
\emph default
The differential equations should be compiled separately: every differential
 equation is a different file to be compiled as a shared object using the
 qmake utility.
 For example, in order to compile the ODE of the file 
\emph on
ode1.s
\emph default
o located under examples subdirectory, the user should create a 
\emph on
ode1.pro
\emph default
 file with the following contents:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=C,frame={tlbr}"
inline false
status open

\begin_layout Plain Layout

TEMPLATE=lib
\end_layout

\begin_layout Plain Layout

SOURCES=ode1.cc
\end_layout

\end_inset

Afterwards, the compilation of the ode is performed using the following
 commands:
\end_layout

\begin_layout Enumerate
qmake ode1.pro
\end_layout

\begin_layout Enumerate
make
\end_layout

\begin_layout Standard
The outcome of the compilation is the shared library 
\emph on
ode1.so
\end_layout

\begin_layout Subsection
Command line options
\end_layout

\begin_layout Standard
The software 
\emph on
RbfDeSolver
\emph default
 has the following command line options:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $--$
\end_inset

help.
 Prints a help screen and terminates.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $--$
\end_inset

kind=DE_KIND.
 The string value DE_KIND determines the kind of differential equation to
 be used and the accepted values are: ode, sode, pde.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $--$
\end_inset

problem=FILE, the string parameter file determines the path to the differential
 equation to be solved.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $--$
\end_inset

count=K, set as K, the number of chromosomes in the genetic population.
 The default value is 500.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $--$
\end_inset

random=R, set as R, the seed for the random number generation.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $--$
\end_inset

generations=G, set as G, the maximum number of generations allowed.
 The default value is 2000.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $--$
\end_inset

epsilon=E, set as E, a small positive value used in the comparisons as well
 as the termination criterion of the genetic algorithm.
 The default value is 
\begin_inset Formula $10^{-7}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $--$
\end_inset

weights=W, set as W, the number of weights for the RBF network.
 The default value is 1.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $--$
\end_inset

srate=S, set as S, the selection rate (parameter 
\begin_inset Formula $p_{s})$
\end_inset

 of the genetic algorithm.
 The default value is 0.1
\end_layout

\begin_layout Enumerate
\begin_inset Formula $--$
\end_inset

mrate=M, set as M, the mutation rate (parameter 
\begin_inset Formula $p_{m}$
\end_inset

 ) of the genetic algorithm.
 The default value is 0.05 
\end_layout

\begin_layout Enumerate
\begin_inset Formula $--$
\end_inset

lg=G, set as G, the number of generations that should be passed in the genetic
 algorithm before the local search method will be applied.
 The default value is 100.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $--$
\end_inset

li=I, set as I, the number of chromosomes that will participate in the local
 search procedure.
 The default value is 20.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $--$
\end_inset

threads=T, set as T, the number of OpenMp threads.
 The default value is 1.
\end_layout

\begin_layout Subsection
Format for ODEs
\end_layout

\begin_layout Standard
In figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "c++-ode"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fortran-ode"

\end_inset

 we present the formulation for ODEs in the languages c++ and Fortran correspond
ingly.
 The listed functions have the following meaning:
\end_layout

\begin_layout Enumerate

\family typewriter
getx0()
\family default
: Returns the lower boundary point, 
\begin_inset Formula $x_{0}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
getx1()
\family default
: Returns the upper boundary point, 
\begin_inset Formula $x_{1}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
getkind()
\family default
: Returns 1,2 or 3:
\end_layout

\begin_deeper
\begin_layout Enumerate
If the value is 1 then the ODE is of first order and the boundary condition
 is of the form: 
\begin_inset Formula $y(x_{0})=y_{0}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
If the value is 2 then the ODE is of second order with boundary conditions
 of the form: 
\begin_inset Formula $y(x_{0})=y_{0},\ y'(x_{0})=y'_{0}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Code 3 indicates that the ODE is of second order with boundary conditions
 of the form: 
\begin_inset Formula $y(x_{0})=y_{0},\ y(x_{1})=y_{1}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate

\family typewriter
getnpoints()
\family default
: Returns the number of equidistant training points (value 
\begin_inset Formula $N$
\end_inset

 in subsection 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Ode-case"
plural "false"
caps "false"
noprefix "false"

\end_inset

)
\end_layout

\begin_layout Enumerate

\family typewriter
getf0()
\family default
: Returns the boundary condition on the left, 
\begin_inset Formula $y_{0}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
getf1()
\family default
: Returns the boundary condition on the right, 
\begin_inset Formula $y_{1}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
getff0()
\family default
: Returns the left boundary condition for second order ODEs 
\begin_inset Formula $y'_{0}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
ode1ff(x,y,yy)
\family default
: If the ODE is of first order, then the purpose of the tool is to minimize
 the function 
\begin_inset Formula $\mbox{ode1ff}(x,r(x),r^{(1)}(x))$
\end_inset

, for different values of 
\begin_inset Formula $x$
\end_inset

 in the range 
\begin_inset Formula $[x_{0},x_{1}]$
\end_inset

.
 The parameter y represents 
\begin_inset Formula $r(x)$
\end_inset

 and the parameter yy represents 
\begin_inset Formula $r^{(1)}(x)$
\end_inset

.
 
\end_layout

\begin_layout Enumerate

\family typewriter
ode2ff(x,y,yy,yyy)
\family default
: If the ODE is of second order, then the 
\family typewriter
tool
\family default
 tries to minimize the function 
\begin_inset Formula $\mbox{ode2ff}(x,r(x),r^{(1)}(x),r^{(2)}(x))$
\end_inset

, for different values of 
\begin_inset Formula $x$
\end_inset

 in the range 
\begin_inset Formula $[x_{0},x_{1}].$
\end_inset

 The parameter y represents 
\begin_inset Formula $r(x)$
\end_inset

, the parameter yy represents 
\begin_inset Formula $r^{(1)}(x)$
\end_inset

 and the parameter yyy represents 
\begin_inset Formula $r^{(2)}(x)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Ode format in C++ 
\begin_inset CommandInset label
LatexCommand label
name "c++-ode"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language={C++}"
inline false
status open

\begin_layout Plain Layout

extern "C"
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

double getx0()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double getx1()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

int getkind()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

int getnpoints()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double getf0()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double getf1()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double getff0()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double ode1ff(double x,double y,double yy)
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double ode2ff(double x,double y,double yy,double yyy)
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Ode format in Fortran
\begin_inset CommandInset label
LatexCommand label
name "fortran-ode"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Fortran"
inline false
status open

\begin_layout Plain Layout

double precision function getx0()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function getx1()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

integer function getkind()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

integer function getnpoints()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function getf0()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function getf1()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function getff0()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function ode1ff(x,y,yy)
\end_layout

\begin_layout Plain Layout

double precision x,y,yy
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function ode2ff(x,y,yy,yyy)
\end_layout

\begin_layout Plain Layout

double precision x,y,yy,yyy
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Format for SODEs
\end_layout

\begin_layout Standard
In figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "sode-c++"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sode-fortran"

\end_inset

 we demonstrate the formulation of SODE's in c++ and in Fortran programming
 languages correspondingly.
 The functions used in those formulations have the following meanings:
\end_layout

\begin_layout Enumerate

\family typewriter
getx0()
\family default
: Returns the left boundary, 
\begin_inset Formula $x_{0}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
getx1()
\family default
: Returns the right boundary, 
\begin_inset Formula $x_{1}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
getnode()
\family default
: Returns the number of ODE's in the system (parameter 
\begin_inset Formula $k$
\end_inset

 in subsection 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Sode-case"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Enumerate

\family typewriter
getnpoints()
\family default
: R Returns the number of equidistant training points (value 
\begin_inset Formula $N$
\end_inset

 in subsection 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Sode-case"
plural "false"
caps "false"
noprefix "false"

\end_inset

)
\end_layout

\begin_layout Enumerate

\family typewriter
\series bold
systemfun(k,x,y,yy)
\family default
 
\series default
: For the SODE case, the aim of the 
\family typewriter
RbfDeSolver
\family default
 is to minimize the function 
\begin_inset Formula $\mbox{systemfun}(k,x,Y,Y^{(1)})$
\end_inset

 for values of 
\begin_inset Formula $x$
\end_inset

 in the range 
\begin_inset Formula $[x_{0},x_{1}]$
\end_inset

, where 
\begin_inset Formula $k$
\end_inset

 is the total number of equations in the system, 
\begin_inset Formula $Y$
\end_inset

 is the vector of Rbf networks 
\begin_inset Formula $r_{i}(x),\ i=1...k$
\end_inset

 and 
\begin_inset Formula $Y'$
\end_inset

 is a vector with elements the first derivative of these 
\begin_inset Formula $k$
\end_inset

 equations evaluated at 
\begin_inset Formula $x$
\end_inset

.
 The double precision array y stands for the vector 
\begin_inset Formula $Y$
\end_inset

 and similar the double precision array yy represents the vector 
\begin_inset Formula $Y'$
\end_inset

.
 
\end_layout

\begin_layout Enumerate

\series bold
s
\family typewriter
ystemf0(node,f0)
\family default
: 
\series default
The argument node stands for the number of differential equations in the
 system and the double precision array f0 with node elements represents
 the vector holding the boundary conditions for each equation in the system
 (vector of equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eqinit"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Format for SODEs in C++
\begin_inset CommandInset label
LatexCommand label
name "sode-c++"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language={C++}"
inline false
status open

\begin_layout Plain Layout

extern "C" {
\end_layout

\begin_layout Plain Layout

double getx0()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double getx1()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

int getnode()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

int getnpoints()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double systemfun(int node, double x, double *y, double *yy)
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

void systemf0(int node,double *f0)
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Format for SODEs in Fortran
\begin_inset CommandInset label
LatexCommand label
name "sode-fortran"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Fortran"
inline false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function getx0()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function getx1()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

integer function getnode()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

integer function getnpoints()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function systemfun(node,x,y,yy)
\end_layout

\begin_layout Plain Layout

integer node
\end_layout

\begin_layout Plain Layout

double precision x
\end_layout

\begin_layout Plain Layout

double precision y(node)
\end_layout

\begin_layout Plain Layout

double precision yy(node)
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

integer function systemf0(node,f0)
\end_layout

\begin_layout Plain Layout

integer node
\end_layout

\begin_layout Plain Layout

double precision f0(node)
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
PDE format
\end_layout

\begin_layout Standard
The system is capable of solving elliptic PDEs in two dimensions in a box
 
\begin_inset Formula $[x_{0},x_{1}]\times[y_{0},y_{1}]$
\end_inset

 with the Dirichlet boundary conditions 
\begin_inset Formula $\Psi(x_{0},y)=f_{0}(y)$
\end_inset

, 
\begin_inset Formula $\Psi(x_{1},y)=f_{1}(y)$
\end_inset

, 
\begin_inset Formula $\Psi(x,y_{0})=g_{0}(x)$
\end_inset

 and 
\begin_inset Formula $\Psi(x,y_{1})=g_{1}(x)$
\end_inset

.
 In figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "pde-c++"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "Fortran-PDE"

\end_inset

 we can see the formulation of PDE's in c++ and Fortran programming languages.
 The presented functions have the following representation:
\end_layout

\begin_layout Enumerate

\family typewriter
getx0()
\family default
: Returns the left boundary 
\begin_inset Formula $x_{0}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
getx1()
\family default
: Returns the right boundary 
\begin_inset Formula $x_{1}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
gety0()
\family default
: Returns the left boundary 
\begin_inset Formula $y_{0}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
gety1()
\family default
: Returns the right boundary 
\begin_inset Formula $y_{1}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
getnpoints()
\family default
: Returns the amount of interior training points for the PDE.
 
\end_layout

\begin_layout Enumerate

\family typewriter
getbpoints()
\family default
: Returns the amount of training points across each boundary of the PDE.
\end_layout

\begin_layout Enumerate

\family typewriter
f0(y)
\family default
: Returns the boundary condition 
\begin_inset Formula $f_{0}(y)$
\end_inset

 across 
\begin_inset Formula $x=x_{0}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
f1(y)
\family default
: Returns the boundary condition 
\begin_inset Formula $f_{1}(y)$
\end_inset

 across 
\begin_inset Formula $x=x_{1}.$
\end_inset


\end_layout

\begin_layout Enumerate

\family typewriter
g0(x)
\family default
: Returns the boundary condition 
\begin_inset Formula $g_{0}(x)$
\end_inset

 across 
\begin_inset Formula $y=y_{0}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
g1(x)
\family default
: The function returns the boundary condition 
\begin_inset Formula $g_{1}(x)$
\end_inset

 across 
\begin_inset Formula $y=y_{1}$
\end_inset

.
\end_layout

\begin_layout Enumerate

\family typewriter
\series bold
pde(x,y,v,x1,y1,x2,y2)
\family default
: 
\series default
For the PDE case 
\family typewriter
RbfDeSolver
\family default
 minimizes the function 
\begin_inset Formula $\mbox{pde}\left(x,y,r(x,y),\frac{\partial r(x,y)}{\partial x},\frac{\partial r(x,y)}{\partial y},\frac{\partial^{2}r(x,y)}{\partial x^{2}},\frac{\partial^{2}r(x,y)}{\partial y^{2}}\right)$
\end_inset

, where 
\begin_inset Formula $x\in[x_{0},x_{1}]$
\end_inset

 and 
\begin_inset Formula $y\in[y_{0},y_{1}].$
\end_inset

 The argument v corresponds to 
\begin_inset Formula $r(x,y).$
\end_inset

 The argument x1 corresponds to the first derivative of 
\begin_inset Formula $r(x,y)$
\end_inset

 with respect to 
\begin_inset Formula $x$
\end_inset

, y1 corresponds to the first derivative of 
\begin_inset Formula $r(x,y)$
\end_inset

 with respect to y, x2 corresponds to the second derivative of 
\begin_inset Formula $r(x,y)$
\end_inset

 with respect to x and the y2 corresponds to the second derivative of 
\begin_inset Formula $r(x,y)$
\end_inset

 with respect to y.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Format for PDEs in C++
\begin_inset CommandInset label
LatexCommand label
name "pde-c++"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language={C++}"
inline false
status open

\begin_layout Plain Layout

extern "C" {
\end_layout

\begin_layout Plain Layout

double getx0()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double getx1()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double gety0()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double gety1()
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

int getnpoints()
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

int getbpoints()
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double f0(double y)
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double f1(double y)
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

double g0(double x)
\end_layout

\begin_layout Plain Layout

{} 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double g1(double x)
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double pde(double x, double y, double v, double x1, double y1,
\end_layout

\begin_layout Plain Layout

double x2, double y2)
\end_layout

\begin_layout Plain Layout

{}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Format for PDEs in Fortran
\begin_inset CommandInset label
LatexCommand label
name "Fortran-PDE"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Fortran"
inline false
status open

\begin_layout Plain Layout

double precision function getx0()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function getx1()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function gety0()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function gety1()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

integer function getnpoints()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

integer function getbpoints()
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function f0(y)
\end_layout

\begin_layout Plain Layout

double precision y
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function f1(y)
\end_layout

\begin_layout Plain Layout

double precision y
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function g0(x)
\end_layout

\begin_layout Plain Layout

double precision x
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function g1(x)
\end_layout

\begin_layout Plain Layout

double precision x
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

double precision function pde(x,y,v,x1,y1,x2,y2)
\end_layout

\begin_layout Plain Layout

double precision x,y,v,x1,y1,x2,y2
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Experiments 
\begin_inset CommandInset label
LatexCommand label
name "sec:Experimental-results"

\end_inset


\end_layout

\begin_layout Standard
A series of test functions used in various research papers 
\begin_inset CommandInset citation
LatexCommand cite
key "de_nn1,de_tsoulos"
literal "false"

\end_inset

 have been used here for testing purposes.
\end_layout

\begin_layout Subsection
Linear ODEs
\end_layout

\begin_layout Subsubsection*
ODE1
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y'=\frac{2x-y}{x}
\]

\end_inset

with 
\begin_inset Formula $y(1)=3,\ x\in[1,2]$
\end_inset

.
 The solution is 
\begin_inset Formula $y(x)=x+\frac{2}{x}$
\end_inset


\end_layout

\begin_layout Subsubsection*
ODE2
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y'=\frac{1-y\cos(x)}{\sin(x)}
\]

\end_inset

with 
\begin_inset Formula $y(1)=\frac{3}{\sin(1)},\ x\in[1,2]$
\end_inset

.
 The solution is 
\begin_inset Formula $y(x)=\frac{x+2}{\sin(x)}$
\end_inset


\end_layout

\begin_layout Subsubsection*
ODE3
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y''=6y'-9y
\]

\end_inset

with 
\begin_inset Formula $y(0)=0,\ y'(0)=2,\ x\in[0,1]$
\end_inset

 and solution 
\begin_inset Formula $y(x)=2x\exp(3x)$
\end_inset


\end_layout

\begin_layout Subsubsection*
ODE4
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y''=-\frac{1}{5}y'-y-\frac{1}{5}\exp\left(-\frac{x}{5}\right)\cos(x)
\]

\end_inset

with 
\begin_inset Formula $y(0)=0,\ y(1)=\frac{\sin(0.1)}{\exp(0.2)},\ x\in[0,1]$
\end_inset

 and solution 
\begin_inset Formula $y(x)=\exp\left(-\frac{x}{5}\right)\sin(x)$
\end_inset


\end_layout

\begin_layout Subsubsection*
ODE5
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y''=-100y
\]

\end_inset

with 
\begin_inset Formula $y(0)=0,\ y'(0)=10,\ x\in[0,1]$
\end_inset

 and the solution is
\begin_inset Formula 
\[
y(x)=\sin(10x)
\]

\end_inset


\end_layout

\begin_layout Subsection
Non-linear ODEs
\end_layout

\begin_layout Subsubsection*
NLODE1 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y''=\frac{1}{2y}
\]

\end_inset

with 
\begin_inset Formula $y(1)=1,\ y(4)=2,\ x\in[1,4].$
\end_inset

 The solution is 
\begin_inset Formula $y(x)=\sqrt{x}$
\end_inset


\end_layout

\begin_layout Subsubsection*
NLODE2 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
(y')^{2}+\log(y)-\cos^{2}(x)-2\cos(x)-1-\log(x+\sin(x))=0
\]

\end_inset

with 
\begin_inset Formula $y(1)=1+\sin(1),\ x\in[1,2]$
\end_inset

.
 The solution is 
\begin_inset Formula $y(x)=x+\sin(x)$
\end_inset


\end_layout

\begin_layout Subsubsection*
NLODE3 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y''y'=-\frac{4}{x^{3}}
\]

\end_inset

with 
\begin_inset Formula $y(1)=0,\ y(2)=\log(4),\ x\in[1,2]$
\end_inset

 and solution 
\begin_inset Formula $y(x)=\log\left(x^{2}\right)$
\end_inset


\end_layout

\begin_layout Subsubsection*
NLODE4 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x^{2}y''+\left(xy'\right)^{2}+\frac{1}{\log(x)}=0
\]

\end_inset

with 
\begin_inset Formula $y(e)=0,\ y'(e)=\frac{1}{e},\ x\in[e,2e]$
\end_inset

 and solution 
\begin_inset Formula $y(x)=\log(\log(x))$
\end_inset


\end_layout

\begin_layout Subsection
Systems of ODEs
\end_layout

\begin_layout Subsubsection*
SODE1 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
y'_{1} & = & \cos(x)+y_{1}^{2}+y_{2}-\left(x^{2}+\sin^{2}(x)\right)\\
y'_{2} & = & 2x-x^{2}\sin(x)+y_{1}y_{2}
\end{eqnarray*}

\end_inset

with 
\begin_inset Formula $y_{1}(0)=0,\ y_{2}(0)=0,\ x\in[0,1]$
\end_inset

.
 The analytical solutions are 
\begin_inset Formula $y_{1}(x)=\sin(x),\ y_{2}(x)=x^{2}$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
SODE2 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
y'_{1} & = & \frac{\cos(x)-\sin(x)}{y_{2}}\\
y'_{2} & = & y_{1}y_{2}+\exp(x)-\sin(x)
\end{eqnarray*}

\end_inset

with 
\begin_inset Formula $y_{1}(0)=0,\ y_{2}(0)=1,\ x\in[0,1]$
\end_inset

 and solutions 
\begin_inset Formula $y_{1}(x)=\frac{\sin(x)}{\exp(x)},\ y_{2}=\exp(x)$
\end_inset


\end_layout

\begin_layout Subsubsection*
SODE3 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
y'_{1} & = & \cos(x)\\
y'_{2} & = & -y_{1}\\
y'_{3} & = & y_{2}\\
y'_{4} & = & -y_{3}\\
y'_{5} & = & y_{4}
\end{eqnarray*}

\end_inset

with 
\begin_inset Formula $y_{1}(0)=0,\ y_{2}(0)=1,\ y_{3}(0)=0,\ y_{4}(0)=1,\ y_{5}(0)=0,\ x\in[0,1]$
\end_inset

 and solutions 
\begin_inset Formula $y_{1}(x)=\sin(x),\ y_{2}(x)=\cos(x),\ y_{3}(x)=\sin(x),\ y_{4}(x)=\cos(x),\ y_{5}(x)=\sin(x)$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
SODE4
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
y'_{1} & = & -\frac{1}{y_{2}}\sin\left(\exp(x)\right)\\
y'_{2} & = & -y_{2}
\end{eqnarray*}

\end_inset

with 
\begin_inset Formula $y_{1}(0)=\cos(1.0),\ y_{2}(0)=1.0,\ x\in[0,1]$
\end_inset

 and solutions 
\begin_inset Formula $y_{1}(x)=\cos\left(\exp(x)\right),\ y_{2}(x)=\exp(-x)$
\end_inset

.
\end_layout

\begin_layout Subsection
PDEs
\end_layout

\begin_layout Subsubsection*
PDE1 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\nabla^{2}\Psi(x,y)=\exp(-x)\left(x-2+y^{3}+6y\right)
\]

\end_inset

with 
\begin_inset Formula $x\in[0,1],\ y\in[0,1]$
\end_inset

 and boundary conditions: 
\begin_inset Formula $\Psi(0,y)=y^{3},\ \Psi(1,y)=\left(1+y^{3}\right)\exp(-1),\ \Psi(x,0)=x\exp(-x),\ \Psi(x,1)=(x+1)\exp(-x)$
\end_inset

 The solution is given by: 
\begin_inset Formula $\Psi(x,y)=\left(x+y^{3}\right)\exp(-x)$
\end_inset


\end_layout

\begin_layout Subsubsection*
PDE2 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\nabla^{2}\Psi(x,y)=-2\Psi(x,y)
\]

\end_inset

with 
\begin_inset Formula $x\in[0,1],\ y\in[0,1]$
\end_inset

 and boundary conditions: 
\begin_inset Formula $\Psi(0,y)=0,\ \Psi(1,y)=\sin(1)\cos(y),\ \Psi(x,0)=\sin(x),\ \Psi(x,1)=\sin(x)\cos(1)$
\end_inset

.
 The analytical solution is 
\begin_inset Formula $\Psi(x,y)=\sin(x)\cos(y)$
\end_inset

.
 
\end_layout

\begin_layout Subsubsection*
PDE3 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\nabla^{2}\Psi(x,y)=4
\]

\end_inset

 with 
\begin_inset Formula $x\in[0,1],\ y\in[0,1]$
\end_inset

 and boundary conditions: 
\begin_inset Formula $\Psi(0,y)=y^{2}+y+1,\ \Psi(1,y)=y^{2}+y+3,\ \Psi(x,0)=x^{2}+x+1,\ \Psi(x,1)=x^{2}+x+3$
\end_inset

.
 The solution is: 
\begin_inset Formula $\Psi(x,y)=x^{2}+y^{2}+x+y+1$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
PDE4
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\nabla^{2}\Psi(x,y)=\left(x-2\right)\exp(-x)+x\exp(-y)
\]

\end_inset

with 
\begin_inset Formula $x\in[0,1],\ y\in[0,1]$
\end_inset

 and boundary conditions: 
\begin_inset Formula $\Psi(0,y)=0,\ \Psi(1,y)=\sin(y),\ \Psi(x,0)=0,\ \Psi(x,1)=\sin(x)$
\end_inset

.
 The solution is: 
\begin_inset Formula $\Psi(x,y)=\sin(xy)$
\end_inset

.
\end_layout

\begin_layout Subsection
Experimental results
\end_layout

\begin_layout Standard
To validate the ability of the proposed method to tackle differential equations,
 a series of experiments were made using the following values for the weight
 number of the Rbf network: 
\begin_inset Formula $w=5,\ w=10,\ w=15$
\end_inset

.
 The values for the parameters of the experiments are listed in the Table
 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Experimental-parameters"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 All the experiments were conducted 30 times using different seeds for the
 random number generator and the average error was measured.
 The random number generator used was the drand48() function of the C programmin
g language.
 The experimental results are listed in the Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Experimental-results."
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Experimental parameters
\begin_inset CommandInset label
LatexCommand label
name "tab:Experimental-parameters"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $N_{c}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ITERMAX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p_{s}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $p_{m}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.05
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\epsilon$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{-7}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $L_{I}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $L_{C}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\lambda$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Experimental results.
\begin_inset CommandInset label
LatexCommand label
name "tab:Experimental-results."

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="18" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EQUATION
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $w=5$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $w=10$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $w=15$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ODE1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $3.9\times10^{-6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2.2\times10^{-6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $3.4\times10^{-6}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ODE2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2.1\times10^{-5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.4\times10^{-5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.5\times10^{-5}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ODE3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $6.6\times10^{-2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $7.7\times10^{-2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $9.4\times10^{-2}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ODE4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $8.8\times10^{-7}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $3.8\times10^{-6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $8.7\times10^{-7}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ODE5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $9.4\times10^{-1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.1\times10^{-1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $5.9\times10^{-2}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NLODE1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $7.2\times10^{-4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.6\times10^{-5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.9\times10^{-4}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NLODE2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $4.6\times10^{-4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $5.3\times10^{-4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.1\times10^{-4}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NLODE3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $5.7\times10^{-6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $7.9\times10^{-6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $5.4\times10^{-6}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NLODE4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.2\times10^{-4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $7.9\times10^{-6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2.6\times10^{-5}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SODE1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2.8\times10^{-6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.9\times10^{-6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SODE2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.4\times10^{-5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $3.2\times10^{-6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SODE3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $3.1\times10^{-5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $8.1\times10^{-5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SODE4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $1.4\times10^{-4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $4.4\times10^{-6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PDE1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $3.7\times10^{-2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $6.8\times10^{-3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PDE2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $3.2\times10^{-3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $2.1\times10^{-5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PDE3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $7.9\times10^{-2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $4.9\times10^{-4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PDE4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $8\times10^{-2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $7.8\times10^{-3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
As the experimental results show, the proposed method solves the vast majority
 of differential equations even when the number of weights is relatively
 small.
 However, adding weights seems to have more positive effects on difficult
 problems, and especially in the case of partial differential equations.
 Of course, increasing the number of weights implies increased execution
 times and, for this reason, the use of parallel processing techniques is
 necessary.
 In the application, there is the possibility of using more processing threads
 through the OpenMP library.
\end_layout

\begin_layout Section
Conclusions
\begin_inset CommandInset label
LatexCommand label
name "sec:Conclusions"

\end_inset


\end_layout

\begin_layout Standard
A method for solving differential equations is presented here, accompanied
 by the corresponding software.
 The method utilizes RBF networks to solve differential equations and the
 enforcement of initial and boundary conditions was done using penalty factors.
 The network configuration was adapted using a hybrid genetic algorithm,
 in which a local optimization method is applied to a randomly selected
 set of chromosomes per distinct number of generations.
\end_layout

\begin_layout Standard
The software developed in the context of this work was also presented.
 The software was written in C++ using the open source library QT, so that
 it can be run on most operating systems.
 The user can encode the differential equation in either C++ or Fortran
 by writing a series of functions.
 Future extensions of the method may include more efficient methods of initializ
ing network weights as well as more advanced methods of terminating the
 genetic algorithm.
\end_layout

\begin_layout Subsection*
Compliance with Ethical Standards 
\end_layout

\begin_layout Standard
All authors declare that they have no has no conflict of interest.
 
\end_layout

\begin_layout Subsection*
Acknowledgments
\end_layout

\begin_layout Standard
The experiments of this research work was performed at the high performance
 computing system established at Knowledge and Intelligent Computing Lab-oratory
, Dept of Informatics and Telecommunications, University of Ioannina, acquired
 with the project "Educational Laboratory equipment of TEI of Epirus" with
 MIS 5007094 funded by the Operational Programme "Epirus" 2014-2020, by
 ERDF and national finds.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_physics1"
literal "false"

\end_inset

M.
 Raissi, G.E.
 Karniadakis, Hidden physics models: Machine learning of nonlinear partial
 differential equations, Journal of Computational Physics 
\series bold
357
\series default
, pp.
 125-141, 2018.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_physics2"
literal "false"

\end_inset

T.
 Lelièvre, G.
 Stoltz, Partial differential equations and stochastic methods in molecular
 dynamics.
 Acta Numerica 
\series bold
25
\series default
, pp.
 681-880, 2016.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_chem1"
literal "false"

\end_inset

G.
 Scholz, F.
 Scholz, First-order differential equations in chemistry, ChemTexts 
\series bold
1
\series default
, 2015.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_chem2"
literal "false"

\end_inset

J.L.
 Padgett, Y.
 Geldiyev, S.
 Gautam, W.
 Peng, Y.
 Mechref, A.
 Ibraguimov, Object classification in analytical chemistry via data-driven
 discovery of partial differential equations.
 Comp and Math Methods, 2021.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_chem3"
literal "false"

\end_inset

O.
 Owoyele, P.
 Pal, ChemNODE: A neural ordinary differential equations framework for efficient
 chemical kinetic solvers, Energy and AI 
\series bold
7
\series default
, 2022.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_econ1"
literal "false"

\end_inset

Z.
 Wang, X.
 Huang, H.
 Shen, Control of an uncertain fractional order economic system via adaptive
 sliding mode, Neurocomputing 
\series bold
83
\series default
, pp.
 83-88, 2012.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_econ2"
literal "false"

\end_inset

Y.
 Achdou, F.J.
 Buera, J.M.
 Lasry, P.L.
 Lions, B.
 Moll, Partial differential equation models in macroeconomicsPhil.
 Trans.
 R.
 Soc.
 A.
 
\series bold
372
\series default
, 2012.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_bio1"
literal "false"

\end_inset

K.
 Hattaf, N.
 Yousfi, Global stability for reaction–diffusion equations in biology, Computers
 & Mathematics with Applications 
\series bold
66
\series default
, pp.
 1488-1497, 2013.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_bio2"
literal "false"

\end_inset

P.
 Getto, M.
 Waurick, A differential equation with state-dependent delay from cell populatio
n biology, Journal of Differential Equations 
\series bold
260
\series default
, pp.
 6176-6200, 2016.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_rk1"
literal "false"

\end_inset

W.
 Tang, Y.
 Sun,Construction of Runge–Kutta type methods for solving ordinary differential
 equations, Applied Mathematics and Computation 
\series bold
234
\series default
, pp.
 179-191, 2014
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_rk2"
literal "false"

\end_inset

C.A.
 Kennedy, M.H.
 Carpenter, Higher-order additive Runge–Kutta schemes for ordinary differential
 equations, Applied Numerical Mathematics 
\series bold
136
\series default
, pp.
 183-205, 2019.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_rk3"
literal "false"

\end_inset

.X.
 Yang, Y.
 Shen, Runge-Kutta Method for Solving Uncertain Differential Equations,
 J.
 Uncertain.
 Anal.
 Appl.
 
\series bold
3
\series default
, 17, 2015.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_pc1"
literal "false"

\end_inset

H.
 Kim, R.
 Sakthivel, Numerical solution of hybrid fuzzy differential equations using
 improved predictor–corrector method, Communications in Nonlinear Science
 and Numerical Simulation 
\series bold
17
\series default
, pp.
 3788-3794, 2012.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_pc2"
literal "false"

\end_inset

V.
 Daftardar-Gejji, Y.
 Sukale, S.
 Bhalekar, A new predictor–corrector method for fractional differential
 equations, Applied Mathematics and Computation 
\series bold
244
\series default
, pp.
 158-182, 2014.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_nn1"
literal "false"

\end_inset

I.
 E.
 Lagaris, A.
 Likas, D.
 I.
 Fotiadis, Artificial neural networks for solving ordinary and partial different
ial equations, IEEE Transactions on Neural Networks 
\series bold
9
\series default
, pp.
 987-1000, 1998.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_nn2"
literal "false"

\end_inset

S.
 Mall, S.
 Chakraverty, Application of Legendre Neural Network for solving ordinary
 differential equations, Applied Soft Computing 
\series bold
43
\series default
, pp.
 347-356, 2016.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_nn3"
literal "false"

\end_inset

M.Pakdaman, A.
 Ahmadian, S.
 Effati, S.
 Salahshour, D.
 Baleanue, Solving differential equations of fractional order using an optimizat
ion technique based on training artificial neural network, Applied Mathematics
 and Computation 
\series bold
293
\series default
, pp.
 81-95, 2017.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_de1"
literal "false"

\end_inset

W.D.
 Chang, Parameter identification of Chen and Lü systems: A differential
 evolution approach, Chaos, Solitons & Fractals 
\series bold
32
\series default
, pp.
 1469-1476, 2007.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_de2"
literal "false"

\end_inset

A.
 Biswas, S.
 Das, A.
 Abraham, S.
 Dasgupta, Design of fractional-order PIλDμ controllers with an improved
 differential evolution, Engineering Applications of Artificial Intelligence
 
\series bold
22
\series default
, pp.
 343-350, 2009.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "nn_ge1"
literal "false"

\end_inset

O.A.
 Arqub, Z.A.
 Hammour, Numerical solution of systems of second-order boundary value problems
 using continuous genetic algorithm, Information Sciences 279, pp.
 396-415, 2014.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "nn_ge2"
literal "false"

\end_inset

D.
 Gutierrez-Navarro, S.
 Lopez-Aguayo, Solving ordinary differential equations using genetic algorithms
 and the Taylor series matrix method, Journal of Physics Communications
 
\series bold
2
\series default
, 2018.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_gpu1"
literal "false"

\end_inset

M.
 Januszewski, M.Kostur, Accelerating numerical solution of stochastic differentia
l equations with CUDA, Computer Physics Communications 
\series bold
181
\series default
, pp.
 183-188, 2010.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_gpu2"
literal "false"

\end_inset

L.
 Murray, GPU Acceleration of Runge-Kutta Integrators, IEEE Transactions
 on Parallel and Distributed Systems 
\series bold
23
\series default
, pp.
 94-101, 2012.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_gpu3"
literal "false"

\end_inset

C.
 Riesinger, T.
 Neckel, F.
 Rupp, Solving Random Ordinary Differential Equations on GPU Clusters using
 Multiple Levels of Parallelism, SIAM Journal on Scientific Computing 
\series bold
38
\series default
, pp.
 C372-C402, 2016.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ge_main"
literal "false"

\end_inset

M.
 O'Neill, C.
 Ryan, Grammatical evolution, IEEE Transactions on Evolutionary Computation
 
\series bold
5
\series default
, pp.
 349-358, 2001.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "de_tsoulos"
literal "true"

\end_inset

I.G.
 Tsoulos, I.E.
 Lagaris, Solving differential equations with genetic programming.
 Genet Program Evolvable Mach 
\series bold
7
\series default
, pp.
 33–54, 2006.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "openmp"
literal "false"

\end_inset

L.
 Dagum, R.
 Menon, OpenMP: an industry standard API for shared-memory programming,
 IEEE Computational Science and Engineering 
\series bold
5
\series default
, pp.
 46-55, 1998.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ga1"
literal "true"

\end_inset

D.
 Goldberg, Genetic Algorithms in Search, Optimization and Machine Learning,
 Addison-Wesley Publishing Company, Reading, Massachussets, 1989.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ga2"
literal "true"

\end_inset

Z.
 Michaelewicz, Genetic Algorithms + Data Structures = Evolution Programs.
 Springer - Verlag, Berlin, 1996.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ga3"
literal "true"

\end_inset

S.A.
 Grady, M.Y.
 Hussaini, M.M.
 Abdullah, Placement of wind turbines using genetic algorithms, Renewable
 Energy 
\series bold
30
\series default
, pp.
 259-270, 2005.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbf1"
literal "false"

\end_inset

J.
 Park and I.
 W.
 Sandberg, Universal Approximation Using Radial-Basis-Function Networks,
 Neural Computation 
\series bold
3
\series default
, pp.
 246-257, 1991.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbfphysics1"
literal "false"

\end_inset

P.
 Teng, Machine-learning quantum mechanics: Solving quantum mechanics problems
 using radial basis function networks, Phys.
 Rev.
 E 
\series bold
98
\series default
, 033305, 2018.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbfphysics2"
literal "false"

\end_inset

R.
 Jovanović, A.
 Sretenovic, Ensemble of radial basis neural networks with K-means clustering
 for heating energy consumption prediction, FME Transactions 
\series bold
45
\series default
, pp.
 51-57, 2017.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbfphysics3"
literal "false"

\end_inset

A.
 Alexandridis, E.
 Chondrodima, E.
 Efthimiou, G.
 Papadakis, F.
 Vallianatos and D.
 Triantis, Large Earthquake Occurrence Estimation Based on Radial Basis
 Function Neural Networks,IEEE Transactions on Geoscience and Remote Sensing
 
\series bold
52
\series default
, pp.
 5443-5453, 2014.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbfphysics4"
literal "false"

\end_inset

V.I.
 Gorbachenko, M.V.
 Zhukov, Solving boundary value problems of mathematical physics using radial
 basis function networks, Comput.
 Math.
 and Math.
 Phys.
 
\series bold
57
\series default
, pp.
 145–155, 2017.
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbfchemistry1"
literal "false"

\end_inset

Chuanhao Wan and Peter de B.
 Harrington, Self-Configuring Radial Basis Function Neural Networks for
 Chemical Pattern Recognition, J.
 Chem.
 Inf.
 Comput.
 Sci.
 
\series bold
39
\series default
, 1049–1056, 1999.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbfchemistry2"
literal "false"

\end_inset

Xiaojun Yao, Xiaoyun Zhang, Ruisheng Zhang, Mancang Liu, Zhide Hu, Botao
 Fan, Prediction of enthalpy of alkanes by the use of radial basis function
 neural networks, Computers & Chemistry 
\series bold
25
\series default
, pp.
 475-482, 2001.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbfchemistry3"
literal "false"

\end_inset

A.
 Shahsavand, A.
 Ahmadpour, Application of optimal RBF neural networks for optimization
 and characterization of porous materials, Computers & Chemical Engineering
 29, pp.
 2134-2143, 2005.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbfmed1"
literal "false"

\end_inset

Y.P.
 Wang, J.W.
 Dang, Q.
 Li and S.
 Li, Multimodal medical image fusion using fuzzy radial basis function neural
 networks, in 2007 International Conference on Wavelet Analysis and Pattern
 Recognition, pp.
 778-782, 2017.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbfmed2"
literal "false"

\end_inset

S, Mehrabi, M.
 Maghsoudloo, H.
 Arabalibeik, R.
 Noormand and Y.
 Nozari, Congestive heart failure, Chronic obstructive pulmonary disease,
 Clinical decision support system, Multilayer perceptron neural network
 and radial basis function neural network, Expert Systems with Applications
 
\series bold
36
\series default
, pp.
 6956-6959, 2009.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbfmed3"
literal "false"

\end_inset

M.
 Veezhinathan, S.
 Ramakrishnan, Detection of Obstructive Respiratory Abnormality Using Flow–Volum
e Spirometry and Radial Basis Function Neural Networks, J Med Syst 
\series bold
31
\series default
, pp.
 461, 2007.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbfecon1"
literal "false"

\end_inset

J.
 A.
 Momoh and S.
 S.
 Reddy, Combined Economic and Emission Dispatch using Radial Basis Function,
 2014 IEEE PES General Meeting | Conference & Exposition, National Harbor,
 MD, 2014, pp.
 1-5, doi: 10.1109/PESGM.2014.6939506.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbfecon2"
literal "false"

\end_inset

Jau-Jia Guo and P.
 B.
 Luh, Selecting input factors for clusters of Gaussian radial basis function
 networks to improve market clearing price prediction, IEEE Transactions
 on Power Systems 
\series bold
18
\series default
, pp.
 665-672, 2003.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "rbfecon3"
literal "false"

\end_inset

L.
 Falat, Z.
 Stanikova, M.
 Durisova, B.
 Holkova, T.
 Potkanova, Application of Neural Network Models in Modelling Economic Time
 Series with Non-constant Volatility, Procedia Economics and Finance 
\series bold
34
\series default
, pp.
 600-607, 2015.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "tolmin"
literal "false"

\end_inset

M.J.D.
 Powell, A Tolerant Algorithm for Linearly Constrained Optimization Calculations
, Mathematical Programming 
\series bold
45
\series default
, pp 547, 1989.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "kaeloali"
literal "false"

\end_inset

P.
 Kaelo, M.M.
 Ali, Integrated crossover rules in real coded genetic algorithms, European
 Journal of Operational Research 
\series bold
176
\series default
, pp.
 60-76, 2007.
\end_layout

\end_body
\end_document
